% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotgg_stacked_columns.r
\name{plotgg_stacked_columns}
\alias{plotgg_stacked_columns}
\title{Plot columns as stacked bars}
\usage{
plotgg_stacked_columns(
  dat,
  x,
  columns = NULL,
  facet_formula = NULL,
  gather_key = "key",
  gather_value = "value",
  custom_theme = ggplot2::theme(panel.background = ggplot2::element_blank(), panel.grid
    = ggplot2::element_blank(), axis.text = ggplot2::element_text(color = "black"),
    axis.title = ggplot2::element_text(color = "black", face = "bold"),
    axis.line.x.bottom = ggplot2::element_line(), axis.line.y.left =
    ggplot2::element_line())
)
}
\arguments{
\item{dat}{A data frame or tibble with one row per observation and multiple
variables (i.e. columns) per observations.}

\item{x}{The name of the column to be used as an observation name. It will
be used to as a label in the x axis of the plot.}

\item{columns}{A character vector containing the names of the columns to
stack. If NULL, all columns except for the column indicated by `x` and
the columns in `facet_formula` will be included.}

\item{facet_formula}{A formula to be used by \link[ggplot2]{facet_grid}. It
will split the stacked bars into panels.}

\item{gather_key}{The key name to be used by \link[tidyr]{gather}. It will indicate
the name for the gathered columns. The text itself will be used as the
legend title.}

\item{gather_value}{The value name to be used by \link[tidyr]{gather}. It will
indicate the sum of values in the stacked bars. The text itself will
be used as the y-axis title.}

\item{custom_theme}{The result of a call to \link[ggplot2]{theme}. It allows
for control over the plot format}
}
\value{
A ggplot2 plot.
}
\description{
Takes a data frame or tibble with one row per observation and multiple
variables (columns) per observation. It then plots the selected variables
as stacked bars per observation, possibly faceting the plot.
}
\examples{
d <- tibble::tibble(sample = letters[1:4],
                    g1 = 4:1,
                    g2 = 1:4,
                    group = rep(LETTERS[1:2], 2))
plotgg_stacked_columns(d,
                       x = 'sample',
                       facet_formula = ~ group)
}
